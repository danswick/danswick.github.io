<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Dan Swick</title>
 <link href="http://danswick.com/atom.xml" rel="self"/>
 <link href="http://danswick.com/"/>
 <updated>2014-07-02T01:42:24-05:00</updated>
 <id>http://danswick.com</id>
 <author>
   <name>Dan Swick</name>
   <email>dan.swick@gmail.com</email>
 </author>

 
 <entry>
   <title>Headphone Music - Motorik</title>
   <link href="http://danswick.com//2014/07/01/motorik/"/>
   <updated>2014-07-01T00:00:00-05:00</updated>
   <id>http://danswick.com/2014/07/01/motorik</id>
   <content type="html">&lt;p&gt;I work in an open office, so headphones and a few great playlists are absolutely necessary to get through the day. I’ll sometimes rely on robot-selected playlists from Pandora or similar, but always end up wishing I’d spent that time getting more familiar with an artist or album - an activity that, as time goes on, is becoming more and more difficult to do. My old fallbacks for music discovery, like college radio (have to rep my alma mater, &lt;a href=&quot;www.kjhk.org&quot;&gt;KJHK&lt;/a&gt;) and MP3 blogs (RIP), either don’t exist are are more difficult to access. How, then, to avoid burning out your favorite tracks? &lt;/p&gt;

&lt;p&gt;These days, my strategy is primarily to stalk people on Spotify, but there’s one pursuit I’ve found particularly rewarding - building a collaborative Spotify playlist of songs featuring the &lt;a href=&quot;http://en.wikipedia.org/wiki/Motorik&quot;&gt;Motorik&lt;/a&gt; beat, a 4/4 drumbeat popularized by Krautrock bands like Can, Neu! and Kraftwerk. The basic beat: &lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Beat&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;1&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;+&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;2&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;+&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;3&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;+&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;4&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Hi-Hat&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;x&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;x&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;x&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;x&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;x&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;x&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;x&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Snare&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;x&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;x&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Kick&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;x&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;x&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;x&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;x&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;
&amp;lt;iframe width=&quot;420&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/ufH87nA9klU&quot; frameborder=&quot;0&quot; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Neu!&lt;/strong&gt; - Hallogallo&lt;/em&gt;, quintessential motorik 
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;I find the beat’s simultaneously driving and droning character is particularly well-suited to headphone time at work. It also helps that a good portion of Motorik songs either have no lyrics or lyrics in German. &lt;/p&gt;

&lt;p&gt;Once I started pulling together a list of Krautrock-era Motorik songs, the beat seemed to appear all over the place and I wanted to see how songs from different eras would fit together in one big playlist. It can be difficult to find songs based on something as exoteric as a drumbeat, but I found a few great lists around the web that I’ve been able to pull from. Each includes a handful of songs that, while interesting examples of the Motorik style, miss the mark for my purposes with distracting lyrics, lots of dissonance or distracting instrumentation. Regardless, they’re all worth checking out: &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.lastfm.es/user/CitizenJu/journal/2011/03/20/4a8mx1_evolution_of_the_motorik!_a_chronological_spotify_playlist_of_songs_that_ultilize_the_motorik_beat&quot;&gt;Evolution of Motorik!&lt;/a&gt; on Last.fm &lt;/li&gt;
  &lt;li&gt;[Top 10 Songs with the Motorik Beat”(http://sickmouthy.com/2012/06/19/top-ten-songs-with-the-motorik-beat/)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://thequietus.com/articles/03472-from-neu-to-kraftwerk-football-motorik-and-the-pulse-of-modernity&quot;&gt;From Neu! to Kraftwork: Football, Motorik and the Pulse of Modernity&lt;/a&gt; on the Quietus&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLUqGOxYKbKHejf0bEtOtKjGe_Bk35Q_-k&quot;&gt;Motorik Krautrock&lt;/a&gt; playlist on YouTube &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=iAjkZhK9DaM&quot;&gt;Motorik: The Beat Goes On…&lt;/a&gt; short documentary &lt;/li&gt;
  &lt;li&gt;The radio, grocery checkout lines, etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Without further ado, here’s the Spotify playlist. If you would like to contribute, please feel free. I just ask that you do your best to match the vibe of the songs and keep the original intent (focusing while using headphones) in mind. &lt;/p&gt;

&lt;iframe src=&quot;https://embed.spotify.com/?uri=spotify:user:rascaltwitch:playlist:4C378qNo7ug7V2WvaC7XyH&quot; width=&quot;300&quot; height=&quot;380&quot; frameborder=&quot;0&quot; allowtransparency=&quot;true&quot;&gt;&lt;/iframe&gt;

</content>
 </entry>
 
 <entry>
   <title>Jekyll for WYSIWYG'ers</title>
   <link href="http://danswick.com//2014/06/27/setup/"/>
   <updated>2014-06-27T00:00:00-05:00</updated>
   <id>http://danswick.com/2014/06/27/setup</id>
   <content type="html">&lt;p&gt;About a year ago, a sweet hosting deal I’d managed to finagle fell through and my modest personal website needed a place to live. I’d been using Wordpress for years and had become fairly familiar with its workflows and quirks. Between my personal writing and work-related writing, I’ve probably set up a dozen Wordpress sites over the years, but never really got past the official installer scripts, WYSIWYG editors and, occasionally, small php edits here and there. &lt;/p&gt;

&lt;p&gt;I think Wordpress is great. My employer just switched over and our communications folk love it. There’s a lot of easy-to-access documentation and no matter where you’re working, there’s probably someone familiar enough to help you out of a jam. That being said, I never really had fun working with it. I like to tinker, take things apart and understand what’s going on when they break. Wordpress is just too complicated for my newbie skills and I didn’t feel I was able to get a firm enough grasp to really understand what was going on under the hood. Enter Jekyll. &lt;/p&gt;

&lt;p&gt;The concept of static pages appeals to my tinkerer sensibility. Without all the php and complex database structures, I stand a fighting chance of comprehending what’s going on each time I commit a new post and if something breaks it’s not likely to affect the whole site, leaving me totally helpless to fix it. And it doesn’t hurt that pretty much all of the geo tech folk I admire are using it. &lt;/p&gt;

&lt;p&gt;I really like writing Markdown, whether it’s for a blog post, conference notes or a presentation outline. Folks all over the web have extolled its virtues, but I’m particularly fond of this post by Ben Balter on why it’s about &lt;a href=&quot;http://ben.balter.com/2014/03/31/word-versus-markdown-more-than-mere-semantics/&quot;&gt;more than just semantics&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;So…yay static pages. Yay markdown. Yay open source. Jekyll seemed great but I was still without hosting and sort of hesitant to plunk down some cash on what would ultimately be an experiment. Luckily, GitHub’s free GitHub Pages already run Jekyll and offer free hosting. To sweeten the deal, it’s fairly trivial to retain your existing URL. &lt;/p&gt;

&lt;p&gt;I just want to point something out that sort of escaped me when I was looking into making the switch. You’ll see a lot about how GitHub pages are “powered by Jekyll,” but unless you’re already familiar with the way Jekyll works, it might not immediately be obvious what this means and you might miss one of the biggest benefits of buying into the Jekyll/GH Pages environment. “Powered by Jekyll” means that, rather than running your new Markdown posts through Jekyll locally &lt;em&gt;then&lt;/em&gt; committing then resulting files, you can simply commit your posts and GH Pages will churn them through Jekyll for you. I initially assumed that in order to post to my blog, I’d have to be working on a computer with Jekyll installed so you can imagine my delight when I realized I could create, edit and commit posts from anywhere. Pretty neat stuff. &lt;/p&gt;

&lt;p&gt;There are many thousands of words all over the web explaining how to set up Jekyll, so I’ll refrain from spelling out the whole process (see the resources section at the end for some helpful links) and instead just outline some of the barriers I encountered and how I overcame them. &lt;/p&gt;

&lt;h2 id=&quot;getting-jekyll-running-locally-on-os-x&quot;&gt;Getting Jekyll running locally on OS X&lt;/h2&gt;

&lt;p&gt;Before you dive into the Jekyll hot tub, be sure you understand that you’ll need to do some work in the terminal and if you’re new to this type of thing, it’s probably going to get messy. But &lt;em&gt;that’s okay!&lt;/em&gt; You (probably) won’t break anything beyond repair and you’ll learn a lot in the process. The &lt;a href=&quot;http://jekyllrb.com/docs/installation/&quot;&gt;official Jekyll docs&lt;/a&gt; are essential, but there are some other great guides out there as well.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Windows users are kind of out of luck in this department. It’s possible to get up and running, but requires some special steps that I won’t get into here. Once your site is built you can still post from a Windows computer, but you won’t be able to do all the fancy local-side Jekyll stuff. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I ran into all kinds of newbie problems getting Ruby working, but they pretty much all stemmed from my improper use of too many package installers and, when I got frustrated, sudo’ing myself into oblivion and ruining all of my file permissions. Don’t be like me. Follow the documentation and don’t abuse sudo.&lt;/p&gt;

&lt;p&gt;Stuff you should install on your mac: &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The latest XCode command line tools  &lt;/li&gt;
  &lt;li&gt;RubyGems (comes with Ruby 1.9 and greater)&lt;/li&gt;
  &lt;li&gt;Ruby Version Manager (RVM) &lt;/li&gt;
  &lt;li&gt;Bundler &lt;/li&gt;
  &lt;li&gt;Homebrew&lt;/li&gt;
  &lt;li&gt;Jekyll!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;mavericks-is-a-pain&quot;&gt;Mavericks is a pain&lt;/h3&gt;

&lt;p&gt;I foolishly updated OS X right in the middle of trying to wrap my head around Jekyll and encountered all kinds of issues that are addressed in &lt;a href=&quot;http://hackercodex.com/guide/mac-osx-mavericks-10.9-configuration/&quot;&gt;this article&lt;/a&gt; about configuring Mavericks. It covers some basic stuff like un-hiding your library folder, fixing your &lt;code&gt;PATH&lt;/code&gt; (read the comments to get a broader view on PATH issues) and setting up &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;.  &lt;/p&gt;

&lt;h3 id=&quot;system-ruby&quot;&gt;System Ruby&lt;/h3&gt;

&lt;p&gt;I had a lot of problems with Ruby, which all seemed to trace back to the pre-installed version of Ruby that comes with Mavericks. I’m no Ruby expert, but it’s much easier to work through Ruby Version Manager rather than deal with the &lt;a href=&quot;http://robots.thoughtbot.com/psa-do-not-use-system-ruby&quot;&gt;many issues&lt;/a&gt; that come from working with pre-installed Ruby. Do yourself a favor and set up &lt;a href=&quot;http://bundler.io/&quot;&gt;Bundler&lt;/a&gt; and &lt;a href=&quot;http://rvm.io/&quot;&gt;RVM&lt;/a&gt; before diving into Jekyll. &lt;/p&gt;

&lt;h2 id=&quot;configuring-a-custom-domain-registered-through-godaddy&quot;&gt;Configuring a custom domain registered through GoDaddy&lt;/h2&gt;

&lt;p&gt;This step has actually gotten a bit more transparent in the months since I set my site up. &lt;a href=&quot;https://help.github.com/articles/tips-for-configuring-an-a-record-with-your-dns-provider&quot;&gt;This official GitHub help doc&lt;/a&gt; should actually provide all of the information you’ll need, but if you’re unfamiliar with GoDaddy’s DNS settings panel, &lt;a href=&quot;https://medium.com/@LovettLovett/github-pages-godaddy-f0318c2f25a&quot;&gt;this guide&lt;/a&gt; has a lot of helpful screenshots, though the author only sets up one &lt;code&gt;A&lt;/code&gt; record. You’ll need the two listed in the previously mentioned official help doc. &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;TIP:&lt;/strong&gt; You might run into some documentation that mentions setting up a &lt;code&gt;gh-pages&lt;/code&gt; repo. This refers specifically to Project Pages. If you’re setting up a User Page, you should ignore references to &lt;code&gt;gh-pages&lt;/code&gt;. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;understanding-templates-and-theming&quot;&gt;Understanding templates and theming&lt;/h2&gt;

&lt;p&gt;Reading through the Jekyll documentation, I felt like I had a fairly strong understanding of the mechanics behind Jekyll’s template system, but had a hard time making it work in practice. I really wanted to hand-code everything, but ended up settling on a simple pre-built template. One of my goals is to build my chops a bit and so far I think tweaking a simple existing template is the right choice. Jekyll is transparent enough that I can get a good sense for how everything works, save myself a lot of headache and easily make some deeper changes to the templates. &lt;/p&gt;

&lt;p&gt;I am currently using &lt;a href=&quot;https://github.com/poole/poole&quot;&gt;Poole&lt;/a&gt;, which includes everything you need to get started poking around Jekyll. The author, &lt;a href=&quot;https://github.com/mdo&quot;&gt;Mark Otto&lt;/a&gt;, has done a great job laying out documentation and building clear examples. &lt;a href=&quot;http://joshualande.com/jekyll-github-pages-poole/&quot;&gt;Joshua Lande&lt;/a&gt; has posted a really nice guide to working with Poole as well. &lt;/p&gt;

&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/articles/sitemaps-for-github-pages&quot;&gt;“SEO” with site maps&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;I also didn’t quite understand how to add &lt;code&gt;jekyll-sitemap&lt;/code&gt; to my &lt;code&gt;_config.yml&lt;/code&gt; file. It should look like this:&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;code&gt;
  gems: [&#39;jekyll_sitemap&#39;]
 &lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Date parsing problems. I had to remove &lt;code&gt;date_to_string&lt;/code&gt; from &lt;code&gt;{{ post.date | date_to_string }}&lt;/code&gt; in my &lt;code&gt;post.html&lt;/code&gt; template because it was passing a &lt;code&gt;nil&lt;/code&gt; value. See &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/2370&quot;&gt;this&lt;/a&gt; issue for more details. &lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;&lt;strong&gt;Bonus Tip!&lt;/strong&gt; After fixing my date parsing problem and adding the above resource note, this post mysteriously broke again! The issue was that Jekyll interpreted the code blocks, which included my original broken code, as &lt;em&gt;Liquid code&lt;/em&gt; rather than text. I found &lt;a href=&quot;http://truongtx.me/2013/01/09/display-liquid-code-in-jekyll/&quot;&gt;this post&lt;/a&gt; super helpful. In short, you’ll want to use the raw tag like so: &lt;/p&gt;
    &lt;/blockquote&gt;

    &lt;blockquote&gt;
      &lt;pre&gt;&lt;code&gt;{% raw %}
some liquid stuff
{% endraw %} 
&lt;/code&gt;&lt;/pre&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://joshualande.com/jekyll-github-pages-poole/&quot;&gt;Creating an “Archive” page&lt;/a&gt;. See “Customizations” section. &lt;/li&gt;
  &lt;li&gt;RSS feeds - a &lt;a href=&quot;https://github.com/snaptortoise/jekyll-rss-feeds&quot;&gt;couple of options&lt;/a&gt; using templates to generate feed xml. &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://hackercodex.com/guide/mac-osx-mavericks-10.9-configuration/&quot;&gt;OS X Configuration&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/articles/using-jekyll-with-pages#keeping-jekyll-up-to-date&quot;&gt;Keeping Jekyll Up to Date&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Posting from github</title>
   <link href="http://danswick.com//2014/05/17/posting_from_github/"/>
   <updated>2014-05-17T00:00:00-05:00</updated>
   <id>http://danswick.com/2014/05/17/posting_from_github</id>
   <content type="html">&lt;p&gt;I guess you don’t even need to use a local version of Jekyll to post if you’re hosting on github pages. &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;That’s pretty great.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I changed this thing! &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Hello to Erin!</title>
   <link href="http://danswick.com//2014/05/17/hi_erin/"/>
   <updated>2014-05-17T00:00:00-05:00</updated>
   <id>http://danswick.com/2014/05/17/hi_erin</id>
   <content type="html">&lt;p&gt;This is to demonstrate to Erin how Jekyll works. &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;hint: it’s real cool. &lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>Test Post</title>
   <link href="http://danswick.com//2014/05/16/test_post/"/>
   <updated>2014-05-16T00:00:00-05:00</updated>
   <id>http://danswick.com/2014/05/16/test_post</id>
   <content type="html">&lt;p&gt;The first one!&lt;/p&gt;
</content>
 </entry>
 

</feed>
